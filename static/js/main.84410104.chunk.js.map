{"version":3,"sources":["Button/Button.tsx","Search/Search.tsx","Pictures/Pictures.tsx","PictureElemForm/PictureElemForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","props","type","className","value","buttonName","Search","placeholder","Pictures","onClick","console","log","onDelete","id","PictureElemForm","onCreate","React","useState","formsSubmitted","setFormsSubmitted","tag","setTag","url","setUrl","like","setLike","isTagValid","length","isUrlValid","isLikeValid","parseInt","onSubmit","event","preventDefault","PictureLikes","PictureTags","PictureDate","htmlFor","name","onChange","target","test","App","PicturesElem","setPicturesElem","handleDelete","deleteId","PicturesElemCopy","filter","elem","map","newPicturesElem","newArray","Math","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84410104.chunk.js","sourcesContent":["import React from \"react\";\nimport './Buttom.css';\n\ninterface ButtonProps{\n    buttonName: string;\n}\n\nexport const Button: React.FC<ButtonProps> = (props) =>{\n    return (\n        <input type=\"button\" className=\"ButtonSize\" value={props.buttonName}/>\n    );\n}","import React from \"react\";\nimport './Search.css';\n\nexport const Search: React.FC = () =>{\n    return (\n        <input type=\"text\" placeholder=\"Busca tus fotos\" className=\"SearchInput\"/>\n    );\n}","import React from \"react\";\nimport './Picture.css';\n\nexport interface PicturesProps{\n    //PictureImg: string;\n    id: number;\n    PictureLikes: number;\n    PictureTags: string;\n    PictureDate: string;\n    //<img className=\"PictureContainer__Img\" src=\"./assets/Images/fondo.png\"/>\n    onDelete: (id: number) => void;\n}\n\nexport const Pictures: React.FC<PicturesProps> = (props) =>{\n\n    const handleDelete: React.MouseEventHandler<HTMLButtonElement> = () =>{\n        console.log('delete');\n        props.onDelete(props.id);\n    }\n\n    return (\n        <div className=\"PictureContainer\">\n            <button onClick={handleDelete}>Delete</button>\n        </div>\n    );\n}","import React from \"react\";\nimport './PictureElemForm.css';\nimport { PicturesProps } from \"../Pictures/Pictures\";\n\ninterface PictureElemFormProps {\n    type: 'create' | 'edit';\n    onCreate: (newPicturesElem: {PictureLikes: number, PictureTags: string, PictureDate: string;}) => void; //permite crear un nuevo elemento\n}\n\nconst PictureElemForm: React.FC <PictureElemFormProps> = ({ type, onCreate }) => {\n\n    //estado para saber si el usuario intento enviar el forms\n    const [formsSubmitted, setFormsSubmitted] = React.useState(false);\n\n    //Para guardar la info del tag\n    const [ tag, setTag ] = React.useState(' ');\n    const handleTagChange: React.ChangeEventHandler<HTMLInputElement> = (event) =>{\n        setTag(event.target.value);\n    }\n\n    //Para guardar la info del url\n    const [ url, setUrl ] = React.useState(' ');\n    const handleUrlChange: React.ChangeEventHandler<HTMLInputElement> = (event) =>{\n        setUrl(event.target.value);\n    }\n\n    //Para guardar la info de los likes\n    const [ like, setLike ] = React.useState('');\n    const handleLikeChange: React.ChangeEventHandler<HTMLInputElement> = (event) =>{\n        const value = event.target.value;\n        const allDigitsRegExp = /^\\d*$/; //permite que solo se pongan números en el input\n        if(allDigitsRegExp.test(value)){\n            setLike(value);\n        }\n    }\n\n    const isTagValid = tag.length >= 5;\n    const isUrlValid = url.length >= 10;\n    const isLikeValid = parseInt(like) > 100;\n\n    //para enviar el formulario\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event) =>{\n        event.preventDefault();\n        setFormsSubmitted(true);//cambia el estado del forms a true\n        if(isTagValid && isUrlValid){\n            console.log('valid');//cuando los tags y el url cumple con la condicion\n            onCreate({\n                PictureLikes: parseInt(like),\n                PictureTags: tag,\n                PictureDate: '22/06/2001'\n            });\n        }else{\n            console.log('invalid');//cuando los tags y el url NO cumple con la condicion\n        }\n    }\n\n    return (<form className='PictureElemForm' onSubmit={handleSubmit}>\n        <h2>{type === 'create' ? 'Agrega' : 'Edita'} las fotos que quieras</h2>\n\n        <label htmlFor='tag'>\n            Tag\n            <input name='tag' type='text' \n            onChange={handleTagChange}\n            value={tag} /> \n            {(formsSubmitted && !isTagValid) && <p className='PictureElemForm__error'>The tag must be at least 5 characters</p>}\n        </label>\n       \n        {type === 'create' && <label>\n            Date\n            <input type='date'></input>\n        </label>}\n\n        <label htmlFor='like'>\n            Likes\n            <input name='like' type='text' \n            onChange={handleLikeChange}\n            value={like} /> \n            {(formsSubmitted && !isLikeValid) && <p className='PictureElemForm__error'>You must have at least 100 likes</p>} \n        </label>\n\n\n        <label>\n            Image URL\n            <input type='text'\n            onChange={handleUrlChange}\n            value={url}/>\n            {(formsSubmitted && !isUrlValid) && <p className='PictureElemForm__error'>The Url must be at least 5 characters</p>}\n        </label>\n\n        <button>\n            {type === 'create' ? 'Agregar' : 'Editar'} \n        </button>\n        \n    </form>);\n}\n\nexport default PictureElemForm;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button } from './Button/Button';\nimport { Search } from './Search/Search';\nimport { Pictures, PicturesProps } from './Pictures/Pictures';\nimport PictureElemForm from './PictureElemForm/PictureElemForm';\n\ntype PicturesElemArray = {\n  id: number;\n  PictureLikes: number;\n  PictureTags: string;\n  PictureDate: string;\n}\n\n/*const PicturesElem : PicturesElemArray[] = [\n  {\n  //PictureImg='./assets/Images/pexels-alex-kozlov-9291817.jpg'\n  id: Math.random(),\n  PictureLikes:20,\n  PictureTags:'Cafe',\n  PictureDate:'06/12/2001'\n  },\n  {\n    //PictureImg='./assets/Images/pexels-alex-kozlov-9291817.jpg'\n    id: Math.random(),\n    PictureLikes:6,\n    PictureTags:'viajes',\n    PictureDate:'12/04/2020'\n  },\n  {\n    //PictureImg='./assets/Images/pexels-alex-kozlov-9291817.jpg'\n    id: Math.random(),\n    PictureLikes:12,\n    PictureTags:'comida',\n    PictureDate:'08/04/2008'\n  },\n  {\n    //PictureImg='./assets/Images/pexels-alex-kozlov-9291817.jpg'\n    id: Math.random(),\n    PictureLikes:36,\n    PictureTags:'New York',\n    PictureDate:'11/09/2001'\n  }\n]*/\n\nfunction App() {\n\n  const [PicturesElem, setPicturesElem ] = React.useState<PicturesElemArray[]>([]);\n\n  const handleCreate = (newPicturesElem: {PictureLikes: number, PictureTags: string, PictureDate: string;}) => {\n    console.log('nuevo Elemento', newPicturesElem);\n\n    //creamos un nuevo arreglo\n    const newArray = [\n      ...PicturesElem,//ponemos todos los elementos que ya existían\n      {\n        //creamos un nuevo elemento con la informacion recibida\n        id: Math.random(),\n        PictureLikes: newPicturesElem.PictureLikes,\n        PictureTags: newPicturesElem.PictureTags,\n        PictureDate:newPicturesElem.PictureDate\n      }\n    ];\n\n    setPicturesElem(newArray);\n  }\n\n  const handleDelete = (deleteId: number) =>{\n    console.log('delete');\n    /*const PicturesElemCopy = PicturesElem.slice();\n    PicturesElemCopy.splice(0,1);\n    setPicturesElem(PicturesElemCopy);*/\n\n    const PicturesElemCopy = PicturesElem.filter((elem) =>{\n      if(elem.id === deleteId){\n        return false;\n      }else{\n        return true;\n      }\n    });\n    setPicturesElem(PicturesElemCopy)\n  }\n\n  return (\n    <div className=\"landingPage\">\n        <div className=\"Background\">\n        <div className=\"ButtonSpace\">\n          <Button buttonName=\"Ver albumes\"></Button>\n          <Button buttonName=\"Iniciar sesión\"></Button>\n        </div>\n        <div className=\"seachSpace\">\n          <Search></Search>\n          <Button buttonName='Buscar'></Button>\n        </div>\n      </div>\n      <div className=\"tagSection\">\n        <h2>Etiquetas</h2>\n      </div>\n      <div className=\"PictureSection\">\n          {PicturesElem.map((elem) => {\n            return <Pictures key={elem.id}\n            id={elem.id}\n            //PictureImg='./assets/Images/pexels-alex-kozlov-9291817.jpg'\n            PictureLikes={elem.PictureLikes}\n            PictureTags={elem.PictureTags}\n            PictureDate={elem.PictureDate}\n            onDelete={handleDelete}/>\n          })}\n      </div>\n      \n      <PictureElemForm \n      type='create'\n      onCreate={handleCreate}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}