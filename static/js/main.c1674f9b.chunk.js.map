{"version":3,"sources":["Button/Button.tsx","Search/Search.tsx","Pictures/Pictures.tsx","PictureElemForm/PictureElemForm.tsx","Tag/Tag.tsx","PictureDetails/PictureDetails.tsx","Page404/Page404.tsx","AlbumElemForms/AlbumElemForms.tsx","Album/Album.tsx","PhotographerElemForms/PhotographerElemForms.tsx","Photographer/Photographer.tsx","AlbumDetails/AlbumDetails.tsx","PhotographerDetails/PhotographerDetails.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","props","to","link","type","className","value","buttonName","onClick","console","log","Search","placeholder","Pictures","history","useHistory","src","PictureImg","alt","onDelete","id","onEdit","push","PictureElemForm","editId","onCreate","Albums","addTagsOptions","tagsOptions","React","useState","formsSubmitted","setFormsSubmitted","url","setUrl","date","setDate","album","setAlbum","like","setLike","manyTags","setManyTags","isUrlValid","length","isLikeValid","parseInt","onSubmit","event","preventDefault","PictureLikes","PictureTags","PictureDate","AlbumId","onChange","target","htmlFor","name","test","parseFloat","map","AlbumName","Autocomplete","multiple","freeSolo","disablePortal","size","options","sx","width","renderInput","params","TextField","values","transformed","op","label","isOptionEqualToValue","option","Tag","TagName","PictureDetails","list","photographerList","albumList","useParams","elem","find","albumElem","elemento","photographerElem","PhotographerId","element","Avatar","height","PhotographerImg","PhotographerName","color","fontSize","PhotographerSubs","Page404","AlbumElemForms","albumFormsSubmitted","setAlbumFormsSubmitted","AlbumCoverState","setAlbumCover","AlbumTopicState","setAlbumTopic","AlbumNameState","setAlbumName","Photographer","setPhotographer","isAlbumCoverValid","isAlbumTopicValid","isAlbumNameValid","AlbumCover","AlbumTopic","Photographers","photographer","Album","PhotographerElemForms","PhotographerFormsSubmitted","setPhotographerFormsSubmitted","PhotgrapherImageState","setPhotgrapherImageState","PhotographerSubsState","setPhotographerSubsState","PhotographerNameState","setPhotographerNameState","isPhotgrapherImgValid","isPhotographerSubsValid","isPhotographerNameValid","AlbumDetails","albumPics","pictures","filter","photographers","albumTags","flat","index","PhotographerDetails","PhotographerAlbum","App","setTagsOptions","process","PicturesElem","setPicturesElem","formType","setFormType","setEditId","handleDelete","deleteId","PicturesElemCopy","handleBeginEdit","AlbumElem","setAlbumElem","albumFormType","setAlbumFormType","editID","setEditID","handleAlbumDelete","DeleteId","AlbumElemCopy","handleAlbumBeginEdit","IdEdit","PhotographerElem","setPhotographerElem","PhotographerFormType","setPhotographerFormType","PhotographerEditId","setPhotographerEditId","handlePhotographerDelete","PhotographerDeleteId","PhotographerElemCopy","handlePhotographerBeginEdit","totalTags","path","newPhotographerElem","newPhotographerArray","Math","random","editPhotographerElem","newPhotographerCopy","slice","findIndex","newAlbumElem","newAlbumArray","IdEditt","editAlbumElem","newAlbumCopy","newPicturesElem","newArray","editIdd","editPicturesElem","newElemCopy","editIndex","newTagsOptions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1674f9b.chunk.js","sourcesContent":["import React from \"react\";\nimport './Buttom.css';\nimport {Link as Rlink} from 'react-router-dom';\n\ninterface ButtonProps{\n    buttonName: string;\n    link: string;\n\n}\n\nexport const Button: React.FC<ButtonProps> = (props) =>{\n\n    const handleLogin :React.MouseEventHandler<HTMLInputElement> = () =>{\n        console.log('move');\n    }\n\n    return (\n        <Rlink to={props.link} ><input type=\"button\" className=\"ButtonSize\" value={props.buttonName} onClick={handleLogin}></input></Rlink>\n    );\n}","import React from \"react\";\nimport './Search.css';\n\nexport const Search: React.FC = () =>{\n    return (\n        <input type=\"text\" placeholder=\"Busca tus fotos\" className=\"SearchInput\"/>\n    );\n}","import React from \"react\";\nimport {useHistory} from 'react-router-dom';\nimport { TagOptions } from \"../Tag/TagOptions\";\nimport './Picture.css';\n\nexport interface PicturesProps{\n    PictureImg: string;\n    id: number;\n    PictureLikes: number;\n    PictureTags: TagOptions[];\n    PictureDate: string;\n    type: 'edit'|'detail';\n    onDelete?: (id: number) => void;\n    onEdit?: (id: number) => void;\n}\n\nexport const Pictures: React.FC<PicturesProps> = (props) =>{\n\n    const history = useHistory();\n\n    const handleDelete: React.MouseEventHandler<HTMLButtonElement> = () =>{\n        console.log('delete');\n        //para que no sea obligatorio mostrarlo\n        if(props.onDelete){\n            props.onDelete(props.id);\n        }\n    }\n\n    const handleEdit: React.MouseEventHandler<HTMLButtonElement> = () =>{\n        console.log('edit');\n        //para que no sea obligatorio mostrarlo\n        if(props.onEdit){\n            props.onEdit(props.id);\n        }\n    }\n\n    const handleDetails :React.MouseEventHandler<HTMLButtonElement> = () =>{\n        console.log('detailss');\n        history.push(`/details/${props.id}`);\n    }\n\n    return (\n        <div>\n            <img src={props.PictureImg} className='PicImg' alt=''></img>\n            <div className=\"PictureContainer\">\n                {props.type === 'edit' && <>\n                    {props.onDelete && <button className='PictureButton' onClick={handleDelete}>Delete</button>}\n                    {props.onEdit && <button className='PictureButton' onClick={handleEdit}>Edit</button>}\n                    <button className='PictureButton' onClick={handleDetails}>View</button>\n                </>}\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport './PictureElemForm.css';\nimport { useHistory } from \"react-router\";\nimport { AlbumElemArray } from \"../AlbumElemObj/AlbumElemObj\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { TagOptions } from \"../Tag/TagOptions\";\nimport { PicturesElemArray } from \"../PictureElemObj/PictureElemObj\";\n\ninterface PictureElemFormProps {\n    //Pictures: PicturesElemArray[];\n    editId: number|null;\n    type: 'create' | 'edit';\n    onCreate: (newPicturesElem: {PictureLikes: number, PictureTags: TagOptions[], PictureDate: string, PictureImg: string, AlbumId: number;}) => void; //permite crear un nuevo elemento\n    onEdit: (id: number, editPicturesElem: {PictureLikes: number, PictureTags: TagOptions[], PictureImg: string;}) => void; //permite editar un nuevo elemento\n    Albums: AlbumElemArray[];\n    addTagsOptions: (newTagOptions: TagOptions) => void;\n    tagsOptions: TagOptions[];\n}\n\nconst PictureElemForm: React.FC <PictureElemFormProps> = ({ editId, type, onCreate, onEdit, Albums, addTagsOptions, tagsOptions}) => {\n\n    const history = useHistory();\n\n    /*const editElem = Pictures.find((elem) => {\n        return elem.id === editId;\n    })*/\n\n    //estado para saber si el usuario intento enviar el forms\n    const [formsSubmitted, setFormsSubmitted] = React.useState(false);\n\n    //Para guardar la info del url\n    const [ url, setUrl ] = React.useState(' ');\n    const handleUrlChange: React.ChangeEventHandler<HTMLInputElement> = (event) =>{\n        setUrl(event.target.value);\n    }\n\n    //Para guardar la info de la fecha\n    const [date, setDate] = React.useState(' ');\n    const handleDateChange: React.ChangeEventHandler<HTMLInputElement> = (event) =>{\n        setDate(event.target.value);\n    }\n\n    //Para guardar la info del id del album\n    const [album, setAlbum] = React.useState(0);\n    const handleAlbumChange: React.ChangeEventHandler<HTMLSelectElement> = (event) =>{\n        console.log(event.target.value);\n        setAlbum(parseFloat(event.target.value));\n    }\n\n    //Para guardar la info de los likes\n    const [ like, setLike ] = React.useState('');\n\n    const handleLikeChange: React.ChangeEventHandler<HTMLInputElement> = (event) =>{\n        const value = event.target.value;\n        const allDigitsRegExp = /^\\d*$/; //permite que solo se pongan números en el input\n        if(allDigitsRegExp.test(value)){\n            setLike(value);\n        }\n    }\n\n    //Para guardar varios tags\n    const [manyTags, setManyTags] = React.useState<TagOptions[]>([]);\n    const handleManyTagsChange = (\n        event: React.SyntheticEvent<Element, Event>, \n        values: (TagOptions| string)[]\n        ) =>{\n            const transformed = values.map((value) => {\n                //si el valor es un string, quiere decir que el usuario esta agregando una nueva opcion\n                if(typeof value === 'string') {\n                    const op = {label: value}\n                    addTagsOptions(op); // agregamos la nueva opcion a la lista general de opciones\n                    return op;\n                } else {\n                    return value;\n                }\n            });\n            setManyTags(transformed);\n    }\n    \n\n    //Los requisitos para enviar el formulario\n    const isUrlValid = url.length >= 10;\n    const isLikeValid = parseInt(like) > 100;\n\n\n    //para enviar el formulario\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event) =>{\n        event.preventDefault();\n        setFormsSubmitted(true);//cambia el estado del forms a true\n        if(type === 'create' && isUrlValid && isLikeValid){\n            console.log('valid');//cuando los tags y el url cumple con la condicion\n            console.log(manyTags);\n            onCreate({\n                PictureLikes: parseInt(like),\n                PictureTags: manyTags,\n                PictureDate: date,\n                PictureImg: url, \n                AlbumId: album\n            });\n            setLike('');\n            setUrl('');\n            setAlbum(0);\n            setFormsSubmitted(false);\n            //verficiar si es necesario\n            history.push('/landingPage');\n        } else if(type === 'edit' && isUrlValid && isLikeValid){\n            onEdit(editId!, {PictureTags: manyTags, PictureImg: url ,PictureLikes: parseInt(like)});\n            history.push('/landingPage');\n            //type = 'create';\n        }\n        else{\n            console.log('invalid');//cuando los tags y el url NO cumple con la condicion\n        }\n    }\n\n    return (<form className='PictureElemForm' onSubmit={handleSubmit}>\n        <h2>{type === 'create' ? 'Agrega' : 'Edita'} las fotos que quieras {editId} </h2>\n\n        \n       \n        {type === 'create' && <label>\n            Date\n            <input type='date' \n            onChange={handleDateChange}\n            value={date}\n            className='InputForms'></input>\n        </label>}\n\n        <label htmlFor='like'>\n            Likes\n            <input name='like' type='text' \n            onChange={handleLikeChange}\n            value={like} className='InputForms' /> \n            {(formsSubmitted && !isLikeValid) && <p className='PictureElemForm__error'>You must have at least 100 likes</p>} \n        </label>\n\n        <label>\n            Image URL\n            <input type='text'\n            onChange={handleUrlChange}\n            value={url}\n            className='InputForms'\n            placeholder=''/>\n            {(formsSubmitted && !isUrlValid) && <p className='PictureElemForm__error'>The Url must be at least 5 characters</p>}\n        </label>\n\n        <label>\n            Album \n            <select\n            className='InputForms'\n            onChange={handleAlbumChange}\n            value={album}>\n                {Albums.map(album => {\n                    return <option \n                    key={album.AlbumId}\n                    value={album.AlbumId}\n                    >{album.AlbumName}</option>\n                })}\n            </select>\n        </label>\n\n        <label className='rockstar'>\n            Tag\n            <Autocomplete\n                multiple\n                freeSolo\n                disablePortal\n                size=\"small\"\n                id=\"combo-box-demo\"\n                options={tagsOptions}\n                sx={{ width: 420 }}\n                renderInput={(params) => <TextField {...params}/>}\n                onChange={handleManyTagsChange}\n                value={manyTags as any}\n                isOptionEqualToValue={(option, value) => {\n                    return option.label === value.label\n                }}\n            />\n        </label>\n        \n\n        <button className='ButtonForms'>\n            {type === 'create' ? 'Agregar' : 'Editar'} \n        </button>\n        \n    </form>);\n}\n\n/*<label htmlFor='tag'>\n            Tag\n            <input name='tag' type='text' \n            onChange={handleTagChange}\n            value={tag} \n            className='InputForms'/> \n            {(formsSubmitted && !isTagValid) && <p className='PictureElemForm__error'>The tag must be at least 5 characters</p>}\n        </label>*/\n\nexport default PictureElemForm;","import React from \"react\";\nimport './Tag.css';\n\n\ninterface TagProps {\n    TagName: string;\n}\n\nconst Tag: React.FC<TagProps> = (props) => {\n    return (<div className='TagContainer'>\n        <button className='TagButton'>{props.TagName}</button>\n    </div>);\n}\n\nexport default Tag;","import { Avatar } from \"@mui/material\";\nimport React from \"react\";\nimport { Redirect, useParams } from \"react-router\";\nimport { PicturesElemArray } from \"../PictureElemObj/PictureElemObj\";\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport './PictureDetails.css';\nimport Tag from \"../Tag/Tag\";\nimport { PhotographerElemArray } from \"../PhotographerElemObj/PhotographerElemObj\";\nimport { AlbumElemArray } from \"../AlbumElemObj/AlbumElemObj\";\n\n interface PictureDetailsProps {\n    list: PicturesElemArray[];\n    photographerList: PhotographerElemArray[];\n    albumList: AlbumElemArray[];\n }\n\n const PictureDetails: React.FC<PictureDetailsProps> = ({ list, photographerList, albumList }) => {\n\nconst params = useParams<{id: string}>();\n    \nconst elem = list.find((elem) => {\n    return elem.id === parseFloat(params.id)\n}); \n\nconst albumElem = albumList.find((elemento)=> {\n    return elemento.AlbumId === elem?.AlbumId;\n});\n\nconst photographerElem = photographerList.find((elem) => {\n    return elem.PhotographerId === albumElem?.PhotographerId;\n})\n\nif(!elem){\n    return <Redirect to='/404'/>\n}\n\n    return (<div className='picDetails'>  \n        <img src={elem.PictureImg} className='PicDetailImg' alt=''></img>\n\n        <div className='picDetContent'>\n        <div className='PicInfoDet'>\n            <div className='tagSectionDet'>\n                {elem.PictureTags.map((element) => {\n                    return <Tag key={element.label} TagName={element.label}></Tag>\n                })}\n            </div>\n            <div className='photographerSection'>\n                <Avatar sx={{ width: 70, height: 70 }} alt=\"Peppa Pig\" src={photographerElem?.PhotographerImg} />\n                <div className='photographerInfo'>\n                    <p className='photographerNameDet'>{photographerElem?.PhotographerName}</p>\n                    <p className='pictureSubsDet'>{elem.PictureLikes} Subscriptores</p>\n                </div>\n            </div>\n\n            <div className='pictureInfoDet'>\n                <div className='photographerLikesDet'>\n                    <FavoriteBorderIcon color=\"disabled\" sx={{ fontSize: 30 }} />\n                    <p className='photographerSubsDet'>{photographerElem?.PhotographerSubs} Me gustas</p>\n                </div>\n                <p className='pictureDateDet'>Publicado: {elem.PictureDate}</p>\n            </div>\n        </div>\n\n        <div className='picButtonsDet'>\n            <div className='downloadButtonDet'>\n                <button className=' button buttonDownloadDet'>Descargar</button>\n            </div>\n\n            <div className='buttonsDet'>\n                <button className='button buttonLikeDet'>Me gusta</button>\n                <button className='button buttonSubscribeDet'>Suscribirme</button>\n            </div>\n        </div>\n        </div>\n        \n     </div>\n     );\n}\n\n//<h2>{elem.PictureTags.values}</h2>\n\n/*<input type=\"button\" className=\"buttonDownloadDet\">Descargar</input>\n                <div className='buttonsDet'>\n                    <input type=\"button\" className=\"buttonLikeDet\">Me gusta</input>\n                    <input type=\"button\" className=\"buttonSubscribeDet\">Suscribirme</input>\n                </div>*/\n export default PictureDetails;","import React from \"react\";\n\ninterface Page404Props {\n\n}\n\nconst Page404: React.FC<Page404Props> = () => {\n    return (<div> Error 404 </div>)\n}\n\nexport default Page404;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { PhotographerElemArray } from \"../PhotographerElemObj/PhotographerElemObj\";\nimport './AlbumElemForms.css';\n\ninterface AlbumElemFormsProps {\n    editId: number | null;\n    type: 'create' | 'edit';\n    onCreate: (newAlbumElem: {AlbumCover: string, AlbumTopic: string, AlbumName: string, PhotographerId: number}) => void; //permite crear un nuevo elemento\n    onEdit: (id: number, editAlbumElem: {AlbumCover: string, AlbumTopic: string, AlbumName: string}) => void; //permite editar un nuevo elemento\n    Photographers: PhotographerElemArray[];\n}\n\nconst AlbumElemForms: React.FC <AlbumElemFormsProps> = (props) => {\n\n    const history = useHistory();\n\n    //estado para saber si el usuario intento enviar el forms\n    const [albumFormsSubmitted, setAlbumFormsSubmitted] = React.useState(false);\n\n    //Para guardar la imagen del Cover\n    const [AlbumCoverState, setAlbumCover] = React.useState(' ');\n    const HandleAlbumCoverChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        setAlbumCover(event.target.value);\n    }\n\n    //Para guardar el tema del album\n    const [AlbumTopicState, setAlbumTopic] = React.useState(' ');\n    const HandleAlbumTopicChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        setAlbumTopic(event.target.value);\n    }\n\n    const [AlbumNameState, setAlbumName] = React.useState(' ');\n    const HandleAlbumNameChange: React.ChangeEventHandler<HTMLInputElement> = (event) =>{\n        setAlbumName(event.target.value);\n    }\n\n    //Para guardar la cantidad de fotos\n    const [Photographer, setPhotographer] = React.useState(0);\n    const HandlePhotographerChange: React.ChangeEventHandler<HTMLSelectElement> = (event) => {\n        console.log(event.target.value);\n        setPhotographer(parseFloat(event.target.value));\n    }\n\n    const isAlbumCoverValid = AlbumCoverState.length >= 10;\n    const isAlbumTopicValid = AlbumTopicState.length >= 5;\n    const isAlbumNameValid = AlbumNameState.length >= 5;\n\n    const handleAlbumSubmit: React.FormEventHandler<HTMLFormElement> = (event) => {\n        event.preventDefault();\n        setAlbumFormsSubmitted(true);//cambia el estado del forms a true\n        if(props.type === 'create' && isAlbumCoverValid && isAlbumTopicValid && isAlbumNameValid){\n            console.log('valid');\n            props.onCreate({\n                AlbumCover: AlbumCoverState,\n                AlbumTopic: AlbumTopicState,\n                AlbumName: AlbumNameState,\n                PhotographerId: Photographer\n            });\n            setAlbumCover('');\n            setAlbumName('');\n            setAlbumTopic('');\n            setAlbumFormsSubmitted(false);\n\n            history.push('/landingPage');\n        } else if(props.type === 'edit' && isAlbumCoverValid && isAlbumNameValid && isAlbumTopicValid){\n            props.onEdit(props.editId!, {AlbumCover: AlbumCoverState, AlbumTopic: AlbumTopicState, AlbumName: AlbumNameState});\n            history.push('/landingPage');\n        }else{\n            console.log('invalid');//cuando los tags y el url NO cumple con la condicion\n        }\n    }\n\n    return (<form className='PictureElemForm' onSubmit={handleAlbumSubmit}>\n        <h2>{props.type === 'create' ? 'Agrega' : 'Edita'} los albumes que quieras {props.editId} </h2>\n\n        <label htmlFor='albumCover'>\n            Album Cover\n            <input name='albumCover' type='text'\n            onChange={HandleAlbumCoverChange}\n            value={AlbumCoverState}\n            className='InputForms'/>\n            {(albumFormsSubmitted && !isAlbumCoverValid) && <p className='PictureElemForm__error'> The link should have at least 10 characters </p>}\n        </label>\n\n        <label htmlFor='albumTopic'>\n            Album Topic\n            <input name='albumTopic' type='text'\n            onChange={HandleAlbumTopicChange}\n            value={AlbumTopicState}\n            className='InputForms'/>\n            {(albumFormsSubmitted && !isAlbumTopicValid) && <p className='PictureElemForm__error'> The Topic should have at least 5 characters</p>}\n        </label>\n\n        <label htmlFor='albumName'>\n           Album Name\n            <input name='albumName' type='text'\n            onChange={HandleAlbumNameChange}\n            value={AlbumNameState}\n            className='InputForms'/>\n            {(albumFormsSubmitted && !isAlbumNameValid) && <p className='PictureElemForm__error'> The Name should have at least 5 characters</p>}\n        </label>\n\n        <label htmlFor='albumName'>\n           Photographer Name\n            <select\n            onChange={HandlePhotographerChange}\n            value={Photographer}\n            className='InputForms'>\n                {props.Photographers.map(photographer => {\n                    return <option \n                    key={photographer.PhotographerId}\n                    value={photographer.PhotographerId}\n                    >{photographer.PhotographerName}</option>\n                })}\n            </select>\n            {(albumFormsSubmitted && !isAlbumNameValid) && <p className='PictureElemForm__error'> The Name should have at least 5 characters</p>}\n        </label>\n\n        <button className='ButtonForms'>\n            {props.type === 'create' ? 'Agregar' : 'Editar'} \n        </button>\n\n    </form>);\n}\n\nexport default AlbumElemForms;","import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport './Album.css';\n\ninterface AlbumProps{\n    AlbumId: number;\n    AlbumCover: string;\n    //AlbumTotalPics: number;\n    AlbumTopic: string;\n    AlbumName: string;\n    onDelete?: (id: number) => void;\n    onEdit?: (id: number) => void;\n    type: 'edit'|'detail';\n}\n\nexport const Album: React.FC<AlbumProps> = (props) => {\n\n    const history = useHistory();\n\n    const handleAlbumDelete: React.MouseEventHandler<HTMLButtonElement> = () => {\n        console.log('delete');\n        //para que no sea obligatorio mostrarlo\n        if(props.onDelete){\n            props.onDelete(props.AlbumId);\n        }\n    }\n\n    const handleAlbumEdit: React.MouseEventHandler<HTMLButtonElement> = () => {\n        console.log('edit');\n        //para que no sea obligatorio mostrarlo\n        if(props.onEdit){\n            props.onEdit(props.AlbumId);\n        }\n    }\n\n    const handleAlbumDetails: React.MouseEventHandler<HTMLButtonElement> = () => {\n        console.log('details');\n        history.push(`/AlbumDetails/${props.AlbumId}`);\n    }\n\n\n    return(\n        <div>\n            \n            <div className='AlbumPicInfo'>\n                <div className='AlbumCover'>\n                    <div className='AlbumColorContent'></div>\n                    <img src={props.AlbumCover} className='AlbumImg' alt=''></img>\n                </div>\n                <div className='AlbumInfo'>\n                    <h1 className='AlbumNameCover'>{props.AlbumName}</h1>\n                    <h3 className='AlbumTopicCover'>{props.AlbumTopic}</h3>\n                </div>\n            </div>\n            \n            \n            <div className=\"PictureContainer\">\n                {props.type === 'edit' && <>\n                    {props.onDelete && <button className='PictureButton' onClick={handleAlbumDelete}>Delete</button>} \n                    {props.onEdit && <button className='PictureButton' onClick={handleAlbumEdit}>Edit</button>}\n                    <button className='PictureButton' onClick={handleAlbumDetails}>View</button>\n                </>}\n            </div>\n        </div>\n    );\n\n}","import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport './PhotographerElemForms.css';\n\ninterface PhotographerElemFormsProps {\n    editId: number | null;\n    type: 'create' | 'edit';\n    onCreate: (newPhotographerElem: {PhotographerImg: string, PhotographerSubs: number, PhotographerName: string;}) => void; //permite crear un nuevo elemento\n    onEdit: (id: number, editPhotographerElem: {PhotographerSubs: number, PhotographerImg: string ,PhotographerName: string;}) => void; //permite editar un nuevo elemento \n} \n\nconst PhotographerElemForms: React.FC <PhotographerElemFormsProps> = (props) => {\n\n    const history = useHistory();\n\n    //estado para saber si el usuario intento enviar el forms\n    const [PhotographerFormsSubmitted, setPhotographerFormsSubmitted] = React.useState(false);\n\n    //Para guardar la imagen\n    const [PhotgrapherImageState, setPhotgrapherImageState] = React.useState('');\n    const handlePhotographerImgChange: React.ChangeEventHandler<HTMLInputElement> = (event) =>{\n        setPhotgrapherImageState(event.target.value);\n    }\n\n    //Para guardar la cantidad de subds del fotografo\n    const [PhotographerSubsState, setPhotographerSubsState] = React.useState('');\n    const handlePhotographerSubsChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        const value = event.target.value;\n        const allDigitsSubs = /^\\d*$/; //permite que solo se pongan números en el input\n        if(allDigitsSubs.test(value)){\n            setPhotographerSubsState(value);\n        }\n    }\n\n    const [PhotographerNameState, setPhotographerNameState] = React.useState('');\n    const handlePhotographerNameChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        setPhotographerNameState(event.target.value);\n    }\n\n    //Los requisitos para enviar el formulario\n    const isPhotgrapherImgValid = PhotgrapherImageState.length >= 10;\n    const isPhotographerSubsValid = parseInt(PhotographerSubsState) >= 100;\n    const isPhotographerNameValid = PhotographerNameState.length >=  5;\n\n    const handlePhotographerElemFormSubmitted: React.FormEventHandler<HTMLFormElement> = (event) => {\n        event.preventDefault();\n        setPhotographerFormsSubmitted(true)//cambia el estado del forms a true\n        if(props.type === 'create' && isPhotgrapherImgValid && isPhotographerSubsValid && isPhotographerNameValid){\n            console.log('valid');//cuando los tags y el url cumple con la condicion\n            props.onCreate({\n                PhotographerImg: PhotgrapherImageState,\n                PhotographerSubs: parseInt(PhotographerSubsState),\n                PhotographerName: PhotographerNameState\n            });\n            setPhotgrapherImageState('');\n            setPhotographerNameState('');\n            setPhotographerSubsState('');\n            setPhotographerFormsSubmitted(false);\n            history.push('/landingPage');\n            //verficiar si es necesario\n        }else if(props.type === 'edit' && isPhotgrapherImgValid && isPhotographerSubsValid && isPhotographerNameValid){\n            props.onEdit(props.editId!, {PhotographerName: PhotographerNameState, PhotographerImg: PhotgrapherImageState ,PhotographerSubs: parseInt(PhotographerSubsState)});\n            history.push('/landingPage');\n        }else{\n            console.log('invalid');//cuando los tags y el url NO cumple con la condicion\n        }\n    }\n\n    return(<form className='PictureElemForm' onSubmit={handlePhotographerElemFormSubmitted}>\n        <h2>{props.type === 'create' ? 'Agrega' : 'Edita'} los fotografos que quieras {props.editId} </h2>\n\n        <label htmlFor='PhotographerImg'>\n            Photographer Img\n            <input type='text'\n            onChange={handlePhotographerImgChange}\n            value={PhotgrapherImageState}\n            className='InputForms'/>\n            {(PhotographerFormsSubmitted && !isPhotgrapherImgValid) && <p className='PictureElemForm__error'> The Image is no available</p>}\n        </label>\n\n        <label htmlFor='PhotographerSubs'>\n            Photographer Subs\n            <input type='text'\n            onChange={handlePhotographerSubsChange}\n            value={PhotographerSubsState}\n            className='InputForms'/>\n            {(PhotographerFormsSubmitted && !isPhotographerSubsValid) && <p className='PictureElemForm__error'> You must have at least 100 subscribers</p>}\n        </label>\n\n        <label htmlFor='PhotographerName'>\n            Photographer Name\n            <input type='text'\n            onChange={handlePhotographerNameChange}\n            value={PhotographerNameState}\n            className='InputForms'/>\n            {(PhotographerFormsSubmitted && !isPhotographerNameValid) && <p className='PictureElemForm__error'> You must have at least 5 characters</p>}\n        </label>\n\n        <button className='ButtonForms'>\n            {props.type === 'create' ? 'Agregar' : 'Editar'} \n        </button>\n\n    </form>);\n}\n\nexport default PhotographerElemForms;","import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport './Photographer.css';\n\nexport interface PhotographerProps {\n    PhotographerId: number;\n    PhotographerImg: string;\n    PhotographerSubs: number;\n    PhotographerName: string;\n    //PhotographerPics: [];\n    //PhotographerPicsCount: number;\n    type: 'edit'|'detail';\n    onDelete?: (id: number) => void;\n    onEdit?: (id:number) => void;\n}\n\nexport const Photographer: React.FC<PhotographerProps> = (props) => {\n    const history = useHistory();\n\n    const handlePhotographerDelete: React.MouseEventHandler<HTMLButtonElement> = () => {\n        console.log('delete');\n        //para que no sea obligatorio mostrarlo\n        if(props.onDelete){\n            props.onDelete(props.PhotographerId);\n        }\n    }\n\n    const handlePhotographerEdit: React.MouseEventHandler<HTMLButtonElement> = () => {\n        console.log('edit');\n        //para que no sea obligatorio mostrarlo\n        if(props.onEdit){\n            props.onEdit(props.PhotographerId);\n        }\n    }\n\n    const handlePhotographerDetails :React.MouseEventHandler<HTMLButtonElement> = () =>{\n        console.log('detailss');\n        history.push(`/PhotographerDetails/${props.PhotographerId}`);\n    }\n\n    return(\n    <div>\n        \n        <div className='AlbumPicInfo'>\n            <div className='AlbumCover'>\n                <div className='AlbumColorContent'></div>\n                <img src={props.PhotographerImg} className='AlbumImg' alt=''></img>\n            </div>\n            <div className='AlbumInfo'>\n                <h1 className='AlbumNameCover'>{props.PhotographerName}</h1>\n                <h3 className='AlbumTopicCover'>Subscriptores: {props.PhotographerSubs}</h3>\n            </div>\n        </div>\n\n        <div className=\"PictureContainer\">\n            {props.type === 'edit' && <>\n                {props.onDelete && <button className='PictureButton' onClick={handlePhotographerDelete}>Delete</button>}\n                {props.onEdit && <button className='PictureButton' onClick={handlePhotographerEdit}>Edit</button>}\n                <button className='PictureButton' onClick={handlePhotographerDetails}>View</button>\n            </>}\n        </div>\n    </div>);\n}","import React from \"react\";\nimport { Redirect, useParams } from \"react-router\";\nimport { AlbumElemArray } from \"../AlbumElemObj/AlbumElemObj\";\nimport { PhotographerElemArray } from \"../PhotographerElemObj/PhotographerElemObj\";\nimport { PicturesElemArray } from \"../PictureElemObj/PictureElemObj\";\nimport { Pictures } from \"../Pictures/Pictures\";\nimport Tag from \"../Tag/Tag\";\nimport './AlbumDetails.css';\n\ninterface AlbumDetailsProps{\n    list: AlbumElemArray[];\n    pictures: PicturesElemArray[];\n    photographers: PhotographerElemArray[];\n}\n\nconst AlbumDetails: React.FC<AlbumDetailsProps> = (props) => {\n\n    const params = useParams<{id: string}>();\n\n    const elem = props.list.find((elem) => {\n        return elem.AlbumId === parseFloat(params.id);\n    });\n\n    if(!elem){\n        return <Redirect to='/404'/>\n    }\n\n    const albumPics = props.pictures.filter((elem) => {\n        return elem.AlbumId === parseFloat(params.id);\n    });\n\n    const photographerElem = props.photographers.find((element) => {\n        return element.PhotographerId === elem.PhotographerId;\n    });\n\n    //para mostrar todos los tags del album\n    const albumTags = albumPics.map((elem) => elem.PictureTags).flat();\n\n    return (<div> \n        \n        \n        <div className='AlbumDetInfo'>\n            <h1 className='info AlbumDetName'>{elem.AlbumName}</h1>\n            <h3 className='info AlbumDetTopic'>{photographerElem?.PhotographerName}</h3>\n        </div>\n\n        <div className='AlbumTags'>\n            {albumTags.map((elem, index) => {\n                return <Tag key={elem.label + index} TagName={elem.label}></Tag>\n            })}\n        </div>\n\n        <div className='AlbumSectionDet'>\n            {albumPics.map((elem) => {\n                return <Pictures key={elem.id}\n                id={elem.id}\n                PictureImg={elem.PictureImg}\n                PictureLikes={elem.PictureLikes}\n                PictureTags={elem.PictureTags}\n                PictureDate={elem.PictureDate}\n                type='edit'/>\n            })}\n        </div>\n </div>);\n}\n\n//sirve para ver la cantidad de las fotos\n/*<p>Album´s pictures: {albumPics.length}</p>*/\n\nexport default AlbumDetails;","import React from \"react\";\nimport { Redirect, useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport { Album } from \"../Album/Album\";\nimport { AlbumElemArray } from \"../AlbumElemObj/AlbumElemObj\";\nimport { PhotographerElemArray } from \"../PhotographerElemObj/PhotographerElemObj\";\nimport './PhotographerDetails.css';\n\ninterface PhotographerDetailsProps {\n    list: PhotographerElemArray[];\n    album: AlbumElemArray[];\n    onDelete?: (id: number) => void;\n    onEdit?: (id: number) => void;\n}\n\nconst PhotographerDetails: React.FC<PhotographerDetailsProps> = (props) => {\n\n    const history = useHistory();\n\n    const params = useParams<{id: string}>();\n    \n    const elem = props.list.find((elem) => {\n        return elem.PhotographerId === parseFloat(params.id);\n    });\n\n    \n\n    if(!elem){\n        return <Redirect to='/404'/>\n    }\n\n    const PhotographerAlbum = props.album.filter((elem) => {\n        return elem.PhotographerId === parseFloat(params.id);\n    });\n\n    const PhotoAlbum = props.album.find((elem) => {\n        return elem.PhotographerId === parseFloat(params.id);\n    });\n\n    const handlePhotographerDetails :React.MouseEventHandler<HTMLButtonElement> = () =>{\n        console.log('detailss');\n        history.push(`/AlbumDetails/${PhotoAlbum?.AlbumId}`);\n        //history.push(`/PhotographerDetails/${props.PhotographerId}`);\n    }\n\n    return (\n    <div> \n\n            \n            <div className='AlbumDetInfo'>\n                <h1 className='info AlbumDetName'>{elem.PhotographerName}</h1>\n                <h3 className='info AlbumDetTopic'>{elem.PhotographerSubs} Subscriptores</h3>\n            </div>\n\n            <div className='PhotographerSectionDet'>\n            {PhotographerAlbum.map((elem) => {\n                return <Album key={elem.AlbumId}\n                    AlbumId={elem.AlbumId}\n                    AlbumCover={elem.AlbumCover}\n                    AlbumName={elem.AlbumName}\n                    AlbumTopic={elem.AlbumTopic}\n                    type='edit'\n                    />\n            })}\n            \n        </div>\n\n        \n        \n     </div>);\n}\n\n/*\n        Details for id: {params.id} \n        <h2>{elem.PhotographerName}</h2>\n        <p> Photographer`s Album: {PhotographerAlbum.length}</p>\n*/\n\n/*\n<div className='photographerCover'>\n    <img src={elem.PhotographerImg} className='PhotographerCoverInfoImg' alt=''></img>\n    <div className='photographerCoverInfo'>\n        <h1 className='info AlbumDetName'>{elem.PhotographerName}</h1>\n        <h3 className='info AlbumDetTopic'>{elem.PhotographerSubs} Subscriptores</h3>\n    </div>\n</div>\n*/\nexport default PhotographerDetails;","import React from 'react';\nimport './App.css';\nimport { Button } from './Button/Button';\nimport { Search } from './Search/Search';\nimport { Pictures} from './Pictures/Pictures';\nimport PictureElemForm from './PictureElemForm/PictureElemForm';\nimport { HashRouter, Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport PictureDetails from './PictureDetails/PictureDetails';\nimport Page404 from './Page404/Page404';\nimport { PicturesElemArray } from './PictureElemObj/PictureElemObj';\nimport Tag from './Tag/Tag';\nimport AlbumElemForms from './AlbumElemForms/AlbumElemForms';\nimport { AlbumElemArray } from './AlbumElemObj/AlbumElemObj';\nimport { Album } from './Album/Album';\nimport { PhotographerElemArray } from './PhotographerElemObj/PhotographerElemObj';\nimport PhotographerElemForms from './PhotographerElemForms/PhotographerElemForms';\nimport { Photographer } from './Photographer/Photographer';\nimport AlbumDetails from './AlbumDetails/AlbumDetails';\nimport PhotographerDetails from './PhotographerDetails/PhotographerDetails';\nimport { TagOptions } from './Tag/TagOptions';\n\n\nfunction App() {\n\n  const history = useHistory();\n\n  const [tagsOptions, setTagsOptions] = React.useState<TagOptions[]>([\n    {label: 'test 1'},\n    {label: 'test 2'}\n]);\n\nconst handleAddTagsOptions = (newTagsOptions: TagOptions) => {\n  setTagsOptions([...tagsOptions, newTagsOptions]);\n}\n\n  const [PicturesElem, setPicturesElem ] = React.useState<PicturesElemArray[]>([\n    {\n      id: 0,\n      PictureImg: process.env.PUBLIC_URL + '/images/pexels-alex-kozlov-9291817.jpg',\n      PictureLikes: 211,\n      PictureTags: [\n        {label: 'streetstyle'},\n        {label: 'ciudad'},\n        {label: 'Bogotá'},\n        {label: 'Soleado'},\n      ],\n      PictureDate: '27/10/2021',\n      AlbumId: 2\n    },\n    {\n      id: 1,\n      PictureImg: process.env.PUBLIC_URL + '/images/nuevayork.jpg',\n      PictureLikes: 326,\n      PictureTags: [\n        {label: 'Nueva York'},\n        {label: 'Otoño'},\n        {label: 'Rascacielos'},\n      ],\n      PictureDate: '16/9/2001',\n      AlbumId: 3\n    },\n    {\n      id: 2,\n      PictureImg: process.env.PUBLIC_URL + '/images/trabajo.jpg',\n      PictureLikes: 534,\n      PictureTags: [\n        {label: 'Estudio'},\n        {label: 'Lapices'},\n        {label: 'Cafe'},\n        {label: 'Mañana'},\n      ],\n      PictureDate: '9/03/2000',\n      AlbumId: 2\n    },\n    {\n      id: 3,\n      PictureImg: process.env.PUBLIC_URL + '/images/vino.jpg',\n      PictureLikes: 526,\n      PictureTags: [\n        {label: 'Vino'},\n        {label: 'Rosado'},\n        {label: 'Aesthetic'},\n      ],\n      PictureDate: '10/9/2001',\n      AlbumId: 2\n    },\n    {\n      id: 4,\n      PictureImg: process.env.PUBLIC_URL + '/images/familia.jpg',\n      PictureLikes: 453,\n      PictureTags: [\n        {label: 'Bebe'},\n        {label: 'Madre'},\n        {label: 'Hogar'},\n      ],\n      PictureDate: '17/01/2002',\n      AlbumId: 1\n    },\n    {\n      id: 5,\n      PictureImg: process.env.PUBLIC_URL + '/images/pexels-maria-orlova-4916259.jpg',\n      PictureLikes: 236,\n      PictureTags: [\n        {label: 'Palacio'},\n        {label: 'India'},\n        {label: 'Blanco'},\n      ],\n      PictureDate: '17/01/2002',\n      AlbumId: 1\n    },\n    \n]);\n\n  const [formType, setFormType] = React.useState<'create' | 'edit'>('create');\n\n  const [editId, setEditId] = React.useState<number | null>(null);\n\n  const handleCreate = (newPicturesElem: {PictureLikes: number, PictureTags: TagOptions[], PictureDate: string, PictureImg: string, AlbumId: number;}) => {\n    console.log('nuevo Elemento', newPicturesElem);\n\n    //creamos un nuevo arreglo\n    const newArray = [\n      ...PicturesElem,//ponemos todos los elementos que ya existían\n      {\n        //creamos un nuevo elemento con la informacion recibida\n        id: Math.random(),\n        PictureImg: newPicturesElem.PictureImg,\n        PictureLikes: newPicturesElem.PictureLikes,\n        PictureTags: newPicturesElem.PictureTags,\n        PictureDate:newPicturesElem.PictureDate,\n        AlbumId: newPicturesElem.AlbumId\n      }\n    ];\n\n    setPicturesElem(newArray);\n  }\n\n  const handleDelete = (deleteId: number) =>{\n    console.log('delete');\n\n    const PicturesElemCopy = PicturesElem.filter((elem) =>{\n      if(elem.id === deleteId){\n        return false;\n      }else{\n        return true;\n      }\n    });\n    setPicturesElem(PicturesElemCopy)\n  }\n\n  const handleBeginEdit = (editId: number) =>{\n    setEditId(editId);\n    setFormType('edit');\n  }\n\n  const handleEdit = (editIdd: number, editPicturesElem: {\n      PictureLikes: number;\n      PictureTags: TagOptions[];\n    }) => {\n      \n      const newElemCopy = PicturesElem.slice();\n      const editIndex = PicturesElem.findIndex((elem) =>{\n        if(elem.id === editIdd){\n          return true;\n        }else{\n          return false;\n        }\n      });\n      newElemCopy[editIndex] = {\n        ...PicturesElem[editIndex],\n        ...editPicturesElem\n      }\n\n      setPicturesElem(newElemCopy);\n      setFormType('create');\n      setEditId(null);\n    }\n\n    // <!--<PicPrueba PicUrl={process.env.PUBLIC_URL + '/images/pexels-alex-kozlov-9291817.jpg'}></PicPrueba>-->\n\n    //Para el album\n\n    const [AlbumElem, setAlbumElem] = React.useState<AlbumElemArray[]>([\n      {\n        AlbumId: 1,\n        PhotographerId: 1,\n        AlbumCover: process.env.PUBLIC_URL + '/images/pexels-laura-tancredi-7078025.jpg',\n        AlbumTopic: 'Latino',\n        AlbumName: 'Cultura Colombiana'\n      },\n      {\n        AlbumId: 2,\n        PhotographerId: 1,\n        AlbumCover: process.env.PUBLIC_URL + '/images/pexels-alex-kozlov-9291817.jpg',\n        AlbumTopic: 'Culturas',\n        AlbumName: 'Alemania'\n      },\n      {\n        AlbumId: 3,\n        PhotographerId: 0,\n        AlbumCover: process.env.PUBLIC_URL + '/images/pexels-laura-tancredi-7078025.jpg',\n        AlbumTopic: 'Viajes',\n        AlbumName: 'Ciudades'\n      },\n      {\n        AlbumId: 4,\n        PhotographerId: 0,\n        AlbumCover: process.env.PUBLIC_URL + '/images/pexels-maria-orlova-4916259.jpg',\n        AlbumTopic: 'Ciudades',\n        AlbumName: 'Medellín'\n      },\n    ]);\n\n    const [albumFormType, setAlbumFormType] = React.useState<'create' | 'edit'>('create');\n\n    const [editID, setEditID] = React.useState< number | null>(null);\n\n    const handleAlbumCreate = (newAlbumElem: {AlbumCover: string, AlbumTopic: string, AlbumName: string, PhotographerId: number}) => {\n      console.log('nuevo Album', newAlbumElem);\n\n      const newAlbumArray = [\n        ...AlbumElem,\n        {\n          AlbumId: Math.random(),\n          PhotographerId: newAlbumElem.PhotographerId,\n          AlbumCover: newAlbumElem.AlbumCover,\n          AlbumTopic: newAlbumElem.AlbumTopic,\n          AlbumName: newAlbumElem.AlbumName,\n        }\n      ];\n      \n      setAlbumElem(newAlbumArray);\n    };\n\n    const handleAlbumDelete = (DeleteId: number) => {\n      console.log('delete');\n\n      const AlbumElemCopy = AlbumElem.filter((elem) => {\n          if(elem.AlbumId === DeleteId){\n            return false;\n          } else{\n            return true;\n          }\n      });\n      setAlbumElem(AlbumElemCopy);\n    }\n\n    const handleAlbumBeginEdit = (IdEdit: number) => {\n      setEditID(IdEdit);\n      setAlbumFormType('edit');\n    }\n\n    const handleAlbumEdit = (IdEditt: number, editAlbumElem: {AlbumCover: string, AlbumTopic: string, AlbumName: string}) => {\n      const newAlbumCopy = AlbumElem.slice();\n      const albumEditIndex = AlbumElem.findIndex((elem) => {\n        if(elem.AlbumId === IdEditt){\n          return true;\n        }else{\n          return false;\n        }\n      }); \n      newAlbumCopy[albumEditIndex] = {\n        ...AlbumElem[IdEditt], ...editAlbumElem\n      }\n      setAlbumElem(newAlbumCopy);\n      setAlbumFormType('create');\n      setEditID(null);\n    }\n\n\n\n    //Para el fotografo\n\n    const [PhotographerElem, setPhotographerElem] = React.useState<PhotographerElemArray[]>([\n      {\n        PhotographerId: 0,\n        PhotographerImg: process.env.PUBLIC_URL + '/images/hombre.png',\n        PhotographerSubs: 136,\n        PhotographerName: 'Juan Perez'\n      },\n      {\n        PhotographerId: 1,\n        PhotographerImg: process.env.PUBLIC_URL + '/images/mujer.png',\n        PhotographerSubs: 254,\n        PhotographerName: 'Mariana Sandoval'\n      },\n\n    ]);\n\n    const [PhotographerFormType, setPhotographerFormType] = React.useState<'create' | 'edit'>('create');\n    \n    const[PhotographerEditId, setPhotographerEditId] = React.useState<number | null> (null);\n\n    const handlePhotographerCreate = (newPhotographerElem: {PhotographerImg: string, PhotographerSubs: number, PhotographerName: string}) => {\n        console.log('nuevo Elemento', newPhotographerElem);\n\n        const newPhotographerArray = [\n          ...PhotographerElem, {\n            PhotographerId: Math.random(),\n            PhotographerImg: newPhotographerElem.PhotographerImg,\n            PhotographerSubs: newPhotographerElem.PhotographerSubs,\n            PhotographerName: newPhotographerElem.PhotographerName\n          }\n        ];\n\n        setPhotographerElem(newPhotographerArray);\n    }\n\n    const handlePhotographerDelete = (PhotographerDeleteId: number) => {\n      console.log('delete');\n\n      const PhotographerElemCopy = PhotographerElem.filter((elem) => {\n        if(elem.PhotographerId === PhotographerDeleteId){\n          return false;\n        }else{\n          return true;\n        }\n      });\n      setPhotographerElem(PhotographerElemCopy);\n    }\n\n    const handlePhotographerBeginEdit = (IdEdit: number) => {\n      setPhotographerEditId(IdEdit);\n      setPhotographerFormType('edit');\n    }\n\n    const handlePhotographerEdit = (editID: number, editPhotographerElem: {PhotographerSubs: number, PhotographerName: string}) => {\n      const newPhotographerCopy = PhotographerElem.slice();\n      const PhotographerEditIndex = PhotographerElem.findIndex((elem) => {\n        if(elem.PhotographerId === editID){\n          return true;\n        }else{\n          return false;\n        }\n      });\n      newPhotographerCopy[PhotographerEditIndex] = {\n        ...PhotographerElem[editID], ...editPhotographerElem\n      }\n      setPhotographerElem(newPhotographerCopy);\n      setPhotographerFormType('create');\n      setPhotographerEditId(null);\n    }\n\n    /*\n\n  const [editId, setEditId] = React.useState<number | null>(null); */\n  \n\n  const totalTags = PicturesElem.map((elem) => elem.PictureTags).flat(); \n\n  return (\n    <HashRouter>\n    <div className=\"page\">\n     \n        \n      <Switch>\n        <Route path='/landingPage'>\n          <div className=\"Background\">\n            <div className='ButtonSpace'>\n              <Button buttonName='Inicio' link='/landingPage'/>\n              <div className=\"ButtonContainer\">\n                <Button buttonName=\"Fotografos\" link='/Photographers'></Button>\n                <Button buttonName=\"Fotos\" link='/Pictures'></Button>\n                <Button buttonName=\"Albumes\" link='/Albums'></Button>\n              </div>\n            </div>\n            <div className=\"seachSpace\">\n              <Search></Search>\n            </div>\n          </div>\n\n          \n\n          <h2 className='TagTitle'>Etiquetas</h2>\n          <div className=\"tagSection\">\n            {totalTags.map((elem, index) => {\n              return <Tag key={elem.label + index} TagName={elem.label}></Tag>\n            })}\n          </div>\n          <div className=\"PictureSection\">\n              {PicturesElem.map((elem) => {\n                return <Pictures key={elem.id}\n                id={elem.id}\n                PictureImg={elem.PictureImg}\n                PictureLikes={elem.PictureLikes}\n                PictureTags={elem.PictureTags}\n                PictureDate={elem.PictureDate}\n                type='detail'\n                onDelete={handleDelete}\n                onEdit={handleBeginEdit}/>\n              })}\n          </div>\n        </Route>\n\n        <Route path='/Photographers'>\n          <div className='Background'>\n          <div className='ButtonSpace'>\n            <Button buttonName='Inicio' link='/landingPage'/>\n              <div className=\"ButtonContainer\">\n                <Button buttonName=\"Fotografos\" link='/Photographers'></Button>\n                <Button buttonName=\"Fotos\" link='/Pictures'></Button>\n                <Button buttonName=\"Albumes\" link='/Albums'></Button>\n              </div>\n          </div>\n\n            <div className='formsPage'>\n              <div className='formsContainer'>\n                  <PhotographerElemForms\n                    editId={PhotographerEditId}\n                    type={PhotographerFormType}\n                    onCreate={handlePhotographerCreate}\n                    onEdit={handlePhotographerEdit}\n                  />\n              </div>\n            </div>\n\n            <div className='PhotographerSection'>\n                {PhotographerElem.map((elem) => {\n                  return <Photographer key={elem.PhotographerId}\n                    PhotographerId={elem.PhotographerId}\n                    PhotographerSubs={elem.PhotographerSubs}\n                    PhotographerImg={elem.PhotographerImg}\n                    PhotographerName={elem.PhotographerName}\n                    type='edit'\n                    onDelete={handlePhotographerDelete}\n                    onEdit={handlePhotographerBeginEdit}\n                  />\n                })}\n            </div>\n          </div>\n        </Route>\n\n        <Route path='/Albums'>\n          <div className='Background'>\n          <div className='ButtonSpace'>\n            <Button buttonName='Inicio' link='/landingPage'/>\n              <div className=\"ButtonContainer\">\n                <Button buttonName=\"Fotografos\" link='/Photographers'></Button>\n                <Button buttonName=\"Fotos\" link='/Pictures'></Button>\n                <Button buttonName=\"Albumes\" link='/Albums'></Button>\n              </div>\n          </div>\n\n            <div className='formsPage'>\n              <div className='formsContainer'>\n                <AlbumElemForms\n                  editId={editID}\n                  type={albumFormType}\n                  onCreate={handleAlbumCreate}\n                  onEdit={handleAlbumEdit}\n\n                  Photographers={PhotographerElem}\n                />\n              </div>\n            </div>\n\n            <div className='AlbumSection'>\n                {AlbumElem.map((elem) => {\n                  return <Album key={elem.AlbumId}\n                    AlbumId={elem.AlbumId}\n                    AlbumCover={elem.AlbumCover}\n                    AlbumName={elem.AlbumName}\n                    AlbumTopic={elem.AlbumTopic}\n                    type='edit'\n                    onDelete={handleAlbumDelete}\n                    onEdit={handleAlbumBeginEdit}\n                  />\n                })}\n              </div>\n          </div>\n        </Route>\n\n          <Route path='/Pictures'>\n            \n              <div className='Background'>\n              <div className='ButtonSpace'>\n              <Button buttonName='Inicio' link='/landingPage'/>\n                <div className=\"ButtonContainer\">\n                  <Button buttonName=\"Fotografos\" link='/Photographers'></Button>\n                  <Button buttonName=\"Fotos\" link='/Pictures'></Button>\n                  <Button buttonName=\"Albumes\" link='/Albums'></Button>\n                </div>\n              </div>\n                  \n                  <div className='formsPage'>\n                    <div className='formsContainer'>\n                      <PictureElemForm \n                        editId={editId}\n                        type= {formType}\n                        onCreate={handleCreate}\n                        onEdit={handleEdit}\n                        Albums={AlbumElem}\n                        tagsOptions={tagsOptions}\n                        addTagsOptions={handleAddTagsOptions}\n                        />\n                    </div>\n                  </div>\n\n                  <div className=\"PictureSection\">\n                    {PicturesElem.map((elem) => {\n                    return <Pictures key={elem.id}\n                    id={elem.id}\n                    PictureImg={elem.PictureImg}\n                    PictureLikes={elem.PictureLikes}\n                    PictureTags={elem.PictureTags}\n                    PictureDate={elem.PictureDate}\n                    type='edit'\n                    onDelete={handleDelete}\n                    onEdit={handleBeginEdit}/>\n                    })}\n                  </div>\n              </div>\n            \n          \n            \n          </Route>\n\n          <Route path='/details/:id'>\n            <PictureDetails\n              list={PicturesElem}\n              photographerList={PhotographerElem}\n              albumList={AlbumElem}\n            />\n          </Route>\n\n          <Route path='/AlbumDetails/:id'>\n            <AlbumDetails\n              list={AlbumElem}\n              pictures={PicturesElem}\n              photographers={PhotographerElem}\n            />\n          </Route>\n\n          <Route path='/PhotographerDetails/:id'>\n            <PhotographerDetails \n            list={PhotographerElem}\n            album={AlbumElem}\n            />\n          </Route>  \n            \n          <Route path='/404'>\n              <Page404/>\n          </Route>\n          \n          <Redirect to='/landingPage'/>\n      </Switch>\n    </div>\n    </HashRouter>\n  );\n}\n\n/*<Tag TagName='Paisajes'></Tag>\n            <Tag TagName='Centro Comercial'></Tag>\n            <Tag TagName='Paz'></Tag>\n            <Tag TagName='Animales'></Tag>\n            <Tag TagName='Electrodomésticos'></Tag>\n            <Tag TagName='Cali'></Tag>\n            <Tag TagName='Paisaje canadiense'></Tag>\n            <Tag TagName='Peces'></Tag>\n            <Tag TagName='Halloween'></Tag>\n            <Tag TagName='Navidad'></Tag>\n            <Tag TagName='Matrimonio'></Tag>\n            <Tag TagName='Cultura colombiana'></Tag>\n            <Tag TagName='Tropical'></Tag>\n            <Tag TagName='Oceano'></Tag>\n            <Tag TagName='selva'></Tag>\n            <Tag TagName='Repostería'></Tag>\n            <Tag TagName='Pasteles'></Tag>\n            <Tag TagName='Calabaza'></Tag>*/\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}